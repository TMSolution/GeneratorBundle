<?php
(\\)
namespace {{ namespace }}\DataFixtures\ORM;

{% block use_statements %}
use Doctrine\Common\DataFixtures\FixtureInterface;
use Doctrine\Common\Persistence\ObjectManager;
use Symfony\Component\DependencyInjection\ContainerAwareInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;
/*@TODO klasa encji */ 
{% endblock use_statements %}

{% block class_definition %}
class {{ fixture_class }} extends AbstractFixtureData implements FixtureInterface, ContainerAwareInterface
{% endblock class_definition %}
{
{% block class_body %}
   

    /**
     * @var ContainerInterface
     */
    private $container;

    /**
     * {@inheritDoc}
     */
    public function setContainer(ContainerInterface $container = null) {
        $this->container = $container;
    }

    public function load(ObjectManager $manager) {

        $generator = \Faker\Factory::create('pl_PL');
        $populator = new \Faker\ORM\Doctrine\Populator($generator, $manager);
        $populator->addEntity('{{ entity_path }}', 1000, array(
          
        {{
            'username' => function() use ($generator) { 
                return $generator->unique()->userName;
            },
            'email' => function() use ($generator) {
            return $generator->unique()->email;
            }
        }}
        ));
        $insertedPKs = $populator->execute();
        $this->createConstrains('{{TMSolutionUserBundle:User}}','{{TMSolutionUserBundle:Group}}',$manager);
        
    }

    /**
     * {@inheritDoc}
     */
    public function getOrder() {
        return {{2}}; // the order in which fixtures will be loaded
    }


 {% if fields|length > 0 %}
    /**
     * @param FormBuilderInterface $builder
     * @param array $options
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
        {%- for field in fields %}

            ->add('{{ field }}')
        {%- endfor %}

        ;
    }
    {% endif %}

    /**
     * @param OptionsResolverInterface $resolver
     */
    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => '{{ namespace }}\Entity{{ entity_namespace ? '\\' ~ entity_namespace : '' }}\{{ entity_class }}'
        ));
    }

    /**
     * @return string
     */
    public function getName()
    {
        return '{{ form_type_name }}';
    }
{% endblock class_body %}
}{# empty Twig template #}
